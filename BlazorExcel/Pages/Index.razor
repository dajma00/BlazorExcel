@page "/"
@using Newtonsoft.Json;
@using NPOI.SS.UserModel;
@using NPOI.XSSF.UserModel;
@using System;
@using System.Collections.Generic;
@using System.Data;
@using System.IO;
@using System.Linq;


<h1>Hello, world!</h1>

Welcome to your new app.

<button class="btn btn-primary" @onclick="ReadExcel">Read Excel</button>
<InputFile OnChange="GetFile"/>

@*<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@

@code {
    private MemoryStream stream2;
    private int currentCount = 0;
    string ret;

    private void IncrementCount()
    {
        currentCount++;
    }
    public async Task GetFile(InputFileChangeEventArgs e) //get excel file
    {
        //https://docs.microsoft.com/en-us/aspnet/core/blazor/file-uploads?view=aspnetcore-5.0&pivots=webassembly
        //prepare filestream from uploaded file
        var stream1 = e.File.OpenReadStream();
        stream2 = new MemoryStream();
        await stream1.CopyToAsync(stream2);
        stream1.Close();
        //await using FileStream stream = new(path, FileMode.Create);
        //await e.File.OpenReadStream().CopyToAsync(stream);
        ReadExcel();
    }
    public void ReadExcel()
        {
            DataTable dtTable = new DataTable();
            List<string> rowList = new List<string>();
            ISheet sheet;
            //using (var stream = new FileStream("Test.xlsx", FileMode.Open))
            using(stream2)
            {
                stream2.Position = 0;
                XSSFWorkbook xssWorkbook = new XSSFWorkbook(stream2);
                sheet = xssWorkbook.GetSheetAt(0);
                IRow headerRow = sheet.GetRow(0);
                int cellCount = headerRow.LastCellNum;
                for (int j = 0; j < cellCount; j++)
                {
                    ICell cell = headerRow.GetCell(j);
                    if (cell == null || string.IsNullOrWhiteSpace(cell.ToString())) continue;
                    {
                        dtTable.Columns.Add(cell.ToString());
                    }
                }
                for (int i = (sheet.FirstRowNum + 1); i <= sheet.LastRowNum; i++)
                {
                    IRow row = sheet.GetRow(i);
                    if (row == null) continue;
                    if (row.Cells.All(d => d.CellType == CellType.Blank)) continue;
                    for (int j = row.FirstCellNum; j < cellCount; j++)
                    {
                        if (row.GetCell(j) != null)
                        {
                            if (!string.IsNullOrEmpty(row.GetCell(j).ToString()) && !string.IsNullOrWhiteSpace(row.GetCell(j).ToString()))
                            {
                                rowList.Add(row.GetCell(j).ToString());
                            }
                        }
                    }
                    if (rowList.Count > 0)
                        dtTable.Rows.Add(rowList.ToArray());
                    rowList.Clear();
                }
            }
            ret = JsonConvert.SerializeObject(dtTable);
            //return JsonConvert.SerializeObject(dtTable);
        }
}